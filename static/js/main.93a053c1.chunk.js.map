{"version":3,"sources":["App.js","index.js"],"names":["averageGrade","grades","sum","reduce","a","b","count","forEach","element","GradeEntry","props","items","i","push","key","type","onChange","name","className","Results","avg","Math","round","includes","App","handleChange","event","target","value","state","slice","parseInt","setState","handleSelectChange","requiredGrade","Array","fill","bind","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8PAIMA,G,MAAe,SAACC,GAElB,IAAMC,EAAMD,EAAOE,OAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IACpCC,EAAQ,EAMZ,OALAL,EAAOM,QAAQ,SAAUC,GACjBA,GACAF,MAGCA,EAAQ,EAAKJ,EAAMI,EAAQ,KAGxC,SAASG,EAAWC,GAGhB,IADA,IAAMC,EAAQ,GACLC,EAAI,EAAGA,GAAK,EAAGA,IACpBD,EAAME,KACF,2BAAOC,IAAKF,GAAZ,QACUA,EADV,KACc,mCACV,2BAAOG,KAAK,OAAOC,SAAUN,EAAMM,SAAUC,KAAML,MAW/D,OAPAD,EAAME,KACF,2BAAOC,IAAK,GAAZ,aACc,mCACV,2BAAOC,KAAK,OAAOC,SAAUN,EAAMM,SAAUC,KAAK,QAKtD,yBAAKC,UAAU,QACX,8BACKP,IAOjB,SAASQ,EAAQT,GAEb,IAAMU,EAAMpB,EAAaU,EAAMT,QAE/B,OACI,6BACI,+CAAqBoB,KAAKC,MAAY,IAANF,GAAa,IAA7C,KAIIV,EAAMT,OAAOsB,SAAS,OAWtB,+BACI,4BACI,6CACA,+CAEJ,4BACI,iCACA,8BAEJ,4BACI,iCACA,gC,IAiETC,E,YAvDX,WAAYd,GAAQ,IAAD,8BACf,4CAAMA,KAWVe,aAAe,SAACC,GACZ,IAAMT,EAAOS,EAAMC,OAAOV,KACpBW,EAAQF,EAAMC,OAAOC,MACrB3B,EAAS,EAAK4B,MAAM5B,OAAO6B,QAEjC7B,EAAOgB,EAAO,GAAKW,EAAQG,SAASH,EAAO,IAAM,KAEjD,EAAKI,SAAS,CACV/B,OAAQA,KApBG,EAyBnBgC,mBAAqB,SAACP,GAClB,IAQME,EAAQF,EAAMC,OAAOC,MAE3B,EAAKI,SAAS,CACVE,cAXa,CACb,EAAK,GACL,EAAK,GACL,EAAK,GACL,EAAK,IAOmBN,MAlC5B,EAAKC,MAAQ,CACT5B,OAAQkC,MAAM,GAAGC,KAAK,MACtBF,cAAe,MAGnB,EAAKT,aAAe,EAAKA,aAAaY,KAAlB,gBACpB,EAAKJ,mBAAqB,EAAKA,mBAAmBI,KAAxB,gBATX,E,sEA2Cf,OACI,yBAAKnB,UAAU,QACX,kEACA,8DACA,kBAACT,EAAD,CAAYO,SAAUsB,KAAKb,eAC3B,kBAACN,EAAD,CAASH,SAAUsB,KAAKL,mBAAoBhC,OAAQqC,KAAKT,MAAM5B,OAAQiC,cAAeI,KAAKT,MAAMK,qB,GAjD/FK,IAAMC,WChFxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.93a053c1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\n\r\nconst averageGrade = (grades) => {\r\n    // Calculate the average of the inputed grades\r\n    const sum = grades.reduce((a, b) => a + b);\r\n    var count = 0;\r\n    grades.forEach(function (element) {\r\n        if (element) {\r\n            count++;\r\n        }\r\n    });\r\n    return ((count > 0) ? sum / count : \"\");\r\n}\r\n\r\nfunction GradeEntry(props) {\r\n    // Generate JSX for grade input\r\n    const items = [];\r\n    for (let i = 1; i <= 5; i++) {\r\n        items.push(\r\n            <label key={i}>\r\n                Test {i}: <span> </span>\r\n                <input type=\"text\" onChange={props.onChange} name={i} />\r\n            </label>\r\n        );\r\n    }\r\n    items.push(\r\n        <label key={6}>\r\n            Homework: <span> </span>\r\n            <input type=\"text\" onChange={props.onChange} name=\"6\" />\r\n        </label>\r\n    );\r\n\r\n    return (\r\n        <div className=\"form\">\r\n            <form>\r\n                {items}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction Results(props) {\r\n\r\n    const avg = averageGrade(props.grades)\r\n\r\n    return (\r\n        <div>\r\n            <p>Current Average: {Math.round(avg * 100) / 100} </p>\r\n\r\n            {/* Render if all grade are entered */}\r\n            {\r\n                props.grades.includes(null) &&\r\n                // <p>Score needed on final for an\r\n                // <select onChange={props.onChange}>\r\n                //         <option value=\"A\">A</option>\r\n                //         <option value=\"B\">B</option>\r\n                //         <option value=\"C\">C</option>\r\n                //         <option value=\"D\">D</option>\r\n                //     </select>:\r\n                // <span> {props.requiredGrade}</span>\r\n                // </p>\r\n\r\n                <table>\r\n                    <tr>\r\n                        <th>Desired Score</th>\r\n                        <th>Score on Final</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>A</td>\r\n                        <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>B</td>\r\n                        <td></td>\r\n                    </tr>\r\n                </table>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            grades: Array(6).fill(null),\r\n            requiredGrade: null\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        const grades = this.state.grades.slice();\r\n\r\n        grades[name - 1] = value ? parseInt(value, 10) : null;\r\n\r\n        this.setState({\r\n            grades: grades\r\n        });\r\n\r\n    }\r\n\r\n    handleSelectChange = (event) => {\r\n        const gradeMap = {\r\n            \"A\": 94,\r\n            \"B\": 84,\r\n            \"C\": 74,\r\n            \"D\": 64\r\n        };\r\n\r\n        // Pulls the desired letter grade from event\r\n        const value = event.target.value;\r\n\r\n        this.setState({\r\n            requiredGrade: gradeMap[value]\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page\">\r\n                <h3>Explorations in Mathematics Grader</h3>\r\n                <p>Enter your grades in the form. </p>\r\n                <GradeEntry onChange={this.handleChange} />\r\n                <Results onChange={this.handleSelectChange} grades={this.state.grades} requiredGrade={this.state.requiredGrade} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}